import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load your carbon emissions dataset (you would need real data for accurate predictions)
# Sample data with hypothetical features
data = pd.read_csv('carbon_emissions_data.csv')

# Preprocess the data (e.g., handle missing values, feature engineering)
# Replace 'features' and 'Emissions' with your actual data columns
X = data[['feature1', 'feature2']]  # Features
y = data['Emissions']  # Target variable

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train a linear regression model
regression_model = LinearRegression()
regression_model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = regression_model.predict(X_test)

# Evaluate the model's performance
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

# Visualize the results
plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred, alpha=0.5)
plt.xlabel('True Emissions')
plt.ylabel('Predicted Emissions')
plt.title('True vs. Predicted Carbon Emissions')
plt.grid(True)
plt.show()
